import sys

# -----------------------------------------
x = None
y = None

print(f'{type(x)=}')
print(f'{id(x)=}, {id(y)=}')
print(f'x == y -> {x == y}')
print(f'x is y -> {x is y}')
print('='*60)

# -----------------------------------------
x = 42
y = 42

print(f'{type(x)=}')
print(f'{id(x)=}, {id(y)=}')
print(f'x == y -> {x == y}')
print(f'x is y -> {x is y}')
print('='*60)

# -----------------------------------------
x = 257
y = 257

print(f'{type(x)=}')
print(f'{id(x)=}, {id(y)=}')
print(f'x == y -> {x == y}')
print(f'x is y -> {x is y}')
print('='*60)

# -----------------------------------------
x = 1007024
y = 1007024

print(f'{type(x)=}')
print(f'{id(x)=}, {id(y)=}')
print(f'x == y -> {x == y}')
print(f'x is y -> {x is y}')
print('='*60)

# -----------------------------------------
a = 'some sting'
b = 'some sting'

print(f'{type(a)=}')
print(f'{id(a)=}, {id(b)=}')
print(f'a == b -> {a == b}')
print(f'a is b -> {a is b}')
print('='*60)


a = sys.intern('come string')
b = sys.intern('come string')
print(f'{id(a)=}, {id(b)=}')

# Функция sys.intern() в Python используется для интернирования строк.
# Интернирование строк — это процесс, при котором строки с одинаковым
# содержимым хранятся в единственном экземпляре в памяти.
# Это может помочь сэкономить память и ускорить сравнение строк.
# Когда вы вызываете sys.intern('some string'), Python проверяет,
# существует ли уже интернированная версия этой строки. Если такая
# версия существует, функция возвращает ссылку на уже существующую
# строку. Если нет, она создает новую интернированную строку и
# возвращает на нее ссылку.


# -----------------------------------------
a = [1, 2, 3]
b = [1, 2, 3]

print(f'{type(a)=}')
print(f'{id(a)=}, {id(b)=}')
print(f'a == b -> {a == b}')
print(f'a is b -> {a is b}')
print('='*60)
